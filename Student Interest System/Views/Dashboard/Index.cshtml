@model Student_Interest_System_Mvc.Models.DashboardRepository;

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="dashboard.css">
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <script src="dashboard.js"></script>
    <title>Student Interest System - Dashboard</title>

    <style>
        /* dashboard.css */

        body {
            background-color: #f4f4f4;
        }

        .container {
            margin-top: 20px;
        }

        .dashboard-widgets {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        }

        .widget {
            background-color: #ffffff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            width: 300px;
        }

        .green-tile {
            background-color: #27ae60; /* Green color */
            color: #ffffff; /* White text color */
            padding: 10px;
            margin: 5px;
            border-radius: 5px;
        }

        .red-tile {
            background-color: #e74c3c; /* Red color */
            color: #ffffff; /* White text color */
            padding: 10px;
            margin: 5px;
            border-radius: 5px;
        }
        /* Styling the Distinct Interests card */
        .interest-card {
            background-color: #3498db; /* Blue color, you can change it to your preferred color */
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 40px; /* Increase padding for more space around the number */
            margin: 20px;
            text-align: center;
            color: #fff; /* Text color for better readability */
            font-size: 64px; /* Adjust the font size as needed */
            font-weight: bold;
        }


            .interest-card:hover {
                transform: scale(1.05);
                transition: transform 0.3s ease-in-out;
                box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            }

    </style>
</head>
<body>

    <div class="container mt-4">
        <h2 class="text-primary">Dashboard</h2>

        <div class="dashboard-widgets">

            <div class="widget">
                <h3>Top 5 Interests</h3>
                <div class="green-tiles">
                    @foreach (var interest in Model.top5Interests)
                    {
                        <div class="green-tile">@interest</div>
                    }
                </div>
            </div>

            <!-- Bottom 5 Interests -->
            <div class="widget">
                <h3>Bottom 5 Interests</h3>
                <div class="red-tiles">
                    @foreach (var interest in Model.bottom5Interests)
                    {
                        <div class="red-tile">@interest</div>
                    }
                </div>
            </div>

            <!-- Distinct Interests Card -->
            <div class="interest-card">
                <h3>Distinct Interests</h3>
                <span id="distinctInterests">@Model.noOfInterests</span>
            </div>

            <!-- Department Distribution -->
            <div class="widget">
                
                <div id="departmentChart"></div>
            </div>

            <!-- Degree Distribution -->
            <div class="widget">
                
                <div id="degreeChart"></div>
            </div>

            <!-- Gender Distribution -->
            <div class="widget">
                
                <div id="genderChart"></div>
            </div>

        </div>
    </div>

    <script>
        // Function to create a pie chart
        function createPieChart(elementId, labels, values, title) {
            var data = [{
                values: values,
                labels: labels,
                type: 'pie'
            }];

            var layout = {
                title: title
            };

            Plotly.newPlot(elementId, data, layout);
        }

        // Call the function to create pie charts for Department, Degree, and Gender distributions
        createPieChart('departmentChart', @Html.Raw(Json.Serialize(Model.departmentDictionary.Keys)), @Html.Raw(Json.Serialize(Model.departmentDictionary.Values)), 'Department Distribution');
        createPieChart('degreeChart', @Html.Raw(Json.Serialize(Model.degreeDictionary.Keys)), @Html.Raw(Json.Serialize(Model.degreeDictionary.Values)), 'Degree Distribution');
        createPieChart('genderChart', @Html.Raw(Json.Serialize(Model.genderDictionary.Keys)), @Html.Raw(Json.Serialize(Model.genderDictionary.Values)), 'Gender Distribution');
    </script>

</body>
</html>
